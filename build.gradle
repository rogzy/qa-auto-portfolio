plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.0'
}

group 'qa-auto-portfolio'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

wrapper {
    gradleVersion = '5.6.1'
}

repositories {
    mavenCentral()
}

dependencies {
    //junit 5
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'

    //lombok
    implementation 'org.projectlombok:lombok:1.18.10'

    //logs
    implementation 'org.slf4j:slf4j-simple:1.7.28'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'

    //guice
    implementation 'com.google.inject:guice:4.2.2'
    implementation 'com.google.inject.extensions:extensions-parent:4.2.2'

    //config
    implementation 'org.aeonbits.owner:owner:1.0.8'

    //assertion
    implementation 'org.assertj:assertj-core:3.14.0'

    //JUnit 5 Extension
    implementation 'name.falgout.jeffrey.testing.junit5:guice-extension:1.1.1'

    //selenide
    implementation 'com.codeborne:selenide:5.7.0'
    
    //allure
    testRuntimeOnly 'io.qameta.allure:allure-junit5:2.13.1'
    //Добавляет в репорт запросы и ответы
    implementation 'io.qameta.allure:allure-okhttp3:2.10.0'
    //Добавляет в репорт скриншоты в момент подения теста
    testImplementation 'io.qameta.allure:allure-selenide:2.13.1'
    //TODO  Добавляет в репорт diff json (донастроить)
    testImplementation 'io.qameta.allure:allure-jsonunit:2.13.1'
}

def setTestProperty(String prop, Object value) {
    test.systemProperty(prop, value)
}

def findProperty(String prop, Object defaultValue) {
    return project.findProperty(prop) ?: defaultValue
}

def setTestProperties() {
    setTestProperty("junit.jupiter.execution.parallel.enabled", findProperty("ci.concurrent", false))
}

test {
    systemProperties = [
            'junit.jupiter.execution.parallel.enabled': 'true',
            'junit.jupiter.execution.parallel.mode.default': 'CONCURRENT',
            'junit.jupiter.execution.parallel.mode.classes.default': 'SAME_THREAD'
    ]

    setTestProperties()
    useJUnitPlatform {
        def splitter = "&"
        Object incTags = findProperty('ci.tags.include', false)
        if (incTags) {
            includeTags incTags.split(splitter)
        }
        Object excTags = findProperty('ci.tags.exclude', false)
        if (excTags) {
            excludeTags excTags.split(splitter)
        }
    }
}

allure {
    version = '2.7.0'
    autoconfigure = true

    useJUnit5 {
        version = '2.7.0'
    }
}

task copyAllureHelpersToTestResult(type: Copy) {
    from 'src/test/resources'
    into  'build/allure-results'
}